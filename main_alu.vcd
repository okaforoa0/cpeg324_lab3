$date
  Sun Apr 27 00:14:00 2025
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module main_alu_tb $end
$var reg 16 ! a_tb[15:0] $end
$var reg 16 " b_tb[15:0] $end
$var reg 1 # clk_tb $end
$var reg 2 $ control_tb[1:0] $end
$var reg 16 % result_tb[15:0] $end
$var reg 4 & immediate_4bit[3:0] $end
$var reg 8 ' extended_imm[7:0] $end
$scope module uut $end
$var reg 16 ( a[15:0] $end
$var reg 16 ) b[15:0] $end
$var reg 1 * clk $end
$var reg 2 + control[1:0] $end
$var reg 16 , result[15:0] $end
$var reg 8 - sum_upper[7:0] $end
$var reg 8 . sum_lower[7:0] $end
$scope module lower_adder $end
$var reg 8 / a[7:0] $end
$var reg 8 0 b[7:0] $end
$var reg 8 1 s[7:0] $end
$var reg 9 2 c[8:0] $end
$scope module fa0 $end
$var reg 1 3 a $end
$var reg 1 4 b $end
$var reg 1 5 cin $end
$var reg 1 6 sum $end
$var reg 1 7 cout $end
$var reg 1 8 t0 $end
$var reg 1 9 t1 $end
$var reg 1 : t2 $end
$upscope $end
$scope module fa1 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = cin $end
$var reg 1 > sum $end
$var reg 1 ? cout $end
$var reg 1 @ t0 $end
$var reg 1 A t1 $end
$var reg 1 B t2 $end
$upscope $end
$scope module fa2 $end
$var reg 1 C a $end
$var reg 1 D b $end
$var reg 1 E cin $end
$var reg 1 F sum $end
$var reg 1 G cout $end
$var reg 1 H t0 $end
$var reg 1 I t1 $end
$var reg 1 J t2 $end
$upscope $end
$scope module fa3 $end
$var reg 1 K a $end
$var reg 1 L b $end
$var reg 1 M cin $end
$var reg 1 N sum $end
$var reg 1 O cout $end
$var reg 1 P t0 $end
$var reg 1 Q t1 $end
$var reg 1 R t2 $end
$upscope $end
$scope module fa4 $end
$var reg 1 S a $end
$var reg 1 T b $end
$var reg 1 U cin $end
$var reg 1 V sum $end
$var reg 1 W cout $end
$var reg 1 X t0 $end
$var reg 1 Y t1 $end
$var reg 1 Z t2 $end
$upscope $end
$scope module fa5 $end
$var reg 1 [ a $end
$var reg 1 \ b $end
$var reg 1 ] cin $end
$var reg 1 ^ sum $end
$var reg 1 _ cout $end
$var reg 1 ` t0 $end
$var reg 1 a t1 $end
$var reg 1 b t2 $end
$upscope $end
$scope module fa6 $end
$var reg 1 c a $end
$var reg 1 d b $end
$var reg 1 e cin $end
$var reg 1 f sum $end
$var reg 1 g cout $end
$var reg 1 h t0 $end
$var reg 1 i t1 $end
$var reg 1 j t2 $end
$upscope $end
$scope module fa7 $end
$var reg 1 k a $end
$var reg 1 l b $end
$var reg 1 m cin $end
$var reg 1 n sum $end
$var reg 1 o cout $end
$var reg 1 p t0 $end
$var reg 1 q t1 $end
$var reg 1 r t2 $end
$upscope $end
$upscope $end
$scope module upper_adder $end
$var reg 8 s a[7:0] $end
$var reg 8 t b[7:0] $end
$var reg 8 u s[7:0] $end
$var reg 9 v c[8:0] $end
$scope module fa0 $end
$var reg 1 w a $end
$var reg 1 x b $end
$var reg 1 y cin $end
$var reg 1 z sum $end
$var reg 1 { cout $end
$var reg 1 | t0 $end
$var reg 1 } t1 $end
$var reg 1 !" t2 $end
$upscope $end
$scope module fa1 $end
$var reg 1 "" a $end
$var reg 1 #" b $end
$var reg 1 $" cin $end
$var reg 1 %" sum $end
$var reg 1 &" cout $end
$var reg 1 '" t0 $end
$var reg 1 (" t1 $end
$var reg 1 )" t2 $end
$upscope $end
$scope module fa2 $end
$var reg 1 *" a $end
$var reg 1 +" b $end
$var reg 1 ," cin $end
$var reg 1 -" sum $end
$var reg 1 ." cout $end
$var reg 1 /" t0 $end
$var reg 1 0" t1 $end
$var reg 1 1" t2 $end
$upscope $end
$scope module fa3 $end
$var reg 1 2" a $end
$var reg 1 3" b $end
$var reg 1 4" cin $end
$var reg 1 5" sum $end
$var reg 1 6" cout $end
$var reg 1 7" t0 $end
$var reg 1 8" t1 $end
$var reg 1 9" t2 $end
$upscope $end
$scope module fa4 $end
$var reg 1 :" a $end
$var reg 1 ;" b $end
$var reg 1 <" cin $end
$var reg 1 =" sum $end
$var reg 1 >" cout $end
$var reg 1 ?" t0 $end
$var reg 1 @" t1 $end
$var reg 1 A" t2 $end
$upscope $end
$scope module fa5 $end
$var reg 1 B" a $end
$var reg 1 C" b $end
$var reg 1 D" cin $end
$var reg 1 E" sum $end
$var reg 1 F" cout $end
$var reg 1 G" t0 $end
$var reg 1 H" t1 $end
$var reg 1 I" t2 $end
$upscope $end
$scope module fa6 $end
$var reg 1 J" a $end
$var reg 1 K" b $end
$var reg 1 L" cin $end
$var reg 1 M" sum $end
$var reg 1 N" cout $end
$var reg 1 O" t0 $end
$var reg 1 P" t1 $end
$var reg 1 Q" t2 $end
$upscope $end
$scope module fa7 $end
$var reg 1 R" a $end
$var reg 1 S" b $end
$var reg 1 T" cin $end
$var reg 1 U" sum $end
$var reg 1 V" cout $end
$var reg 1 W" t0 $end
$var reg 1 X" t1 $end
$var reg 1 Y" t2 $end
$upscope $end
$upscope $end
$upscope $end
$scope module se $end
$var reg 4 Z" input_4bit[3:0] $end
$var reg 8 [" output_8bit[7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
bUUUUUUUUUUUUUUUU !
bUUUUUUUUUUUUUUUU "
0#
bUU $
bUUUUUUUUUUUUUUUU %
b0010 &
b00000010 '
bUUUUUUUUUUUUUUUU (
bUUUUUUUUUUUUUUUU )
0*
bUU +
bUUUUUUUUUUUUUUUU ,
bUUUUUUUU -
bUUUUUUUU .
bUUUUUUUU /
bUUUUUUUU 0
bUUUUUUUU 1
bUUUUUUUU0 2
U3
U4
05
U6
U7
U8
09
U:
U;
U<
U=
U>
U?
U@
UA
UB
UC
UD
UE
UF
UG
UH
UI
UJ
UK
UL
UM
UN
UO
UP
UQ
UR
US
UT
UU
UV
UW
UX
UY
UZ
U[
U\
U]
U^
U_
U`
Ua
Ub
Uc
Ud
Ue
Uf
Ug
Uh
Ui
Uj
Uk
Ul
Um
Un
Uo
Up
Uq
Ur
bUUUUUUUU s
bUUUUUUUU t
bUUUUUUUU u
bUUUUUUUU0 v
Uw
Ux
0y
Uz
U{
U|
0}
U!"
U""
U#"
U$"
U%"
U&"
U'"
U("
U)"
U*"
U+"
U,"
U-"
U."
U/"
U0"
U1"
U2"
U3"
U4"
U5"
U6"
U7"
U8"
U9"
U:"
U;"
U<"
U="
U>"
U?"
U@"
UA"
UB"
UC"
UD"
UE"
UF"
UG"
UH"
UI"
UJ"
UK"
UL"
UM"
UN"
UO"
UP"
UQ"
UR"
US"
UT"
UU"
UV"
UW"
UX"
UY"
b0010 Z"
b00000010 ["
#1000000
b0000000000000010 !
b0000000000000000 "
b10 $
b0000000000000010 (
b0000000000000000 )
b10 +
b00000000 -
b00000010 .
b00000010 /
b00000000 0
b00000010 1
b000000000 2
03
04
06
07
08
0:
1;
0<
0=
1>
0?
1@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
b00000000 s
b00000000 t
b00000000 u
b000000000 v
0w
0x
0z
0{
0|
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
0Q"
0R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
#2000000
1#
b0000000000000010 %
1*
b0000000000000010 ,
#3000000
0#
0*
#4000000
b1111 &
b11111111 '
b1111 Z"
b11111111 ["
#5000000
b0000000011111111 !
b0000000011111111 (
b11111111 .
b11111111 /
b11111111 1
13
16
18
1C
1F
1H
1K
1N
1P
1S
1V
1X
1[
1^
1`
1c
1f
1h
1k
1n
1p
#6000000
1#
b0000000011111111 %
1*
b0000000011111111 ,
#7000000
0#
0*
#8000000
b0000000000000010 !
b0000000011111111 "
b00 $
b0000000000000010 (
b0000000011111111 )
b00 +
b00000001 .
b00000010 /
b11111111 0
b00000001 1
b111111100 2
03
14
1<
0>
1?
0@
1B
0C
1D
1E
0F
1G
1I
0K
1L
1M
0N
1O
1Q
0S
1T
1U
0V
1W
1Y
0[
1\
1]
0^
1_
1a
0c
1d
1e
0f
1g
1i
0k
1l
1m
0n
1o
1q
#9000000
1#
b0000000000000001 %
1*
b0000000000000001 ,
#10000000
0#
0*
#11000000
b0000000000000001 !
b0000000000000000 "
b01 $
b0000000000000001 (
b0000000000000000 )
b01 +
b00000001 .
b00000001 /
b00000000 0
b00000001 1
b000000000 2
13
04
0;
0<
0?
0B
0D
0E
0F
0G
0H
0I
0L
0M
0N
0O
0P
0Q
0T
0U
0V
0W
0X
0Y
0\
0]
0^
0_
0`
0a
0d
0e
0f
0g
0h
0i
0l
0m
0n
0o
0p
0q
#12000000
1#
b0000000100000000 %
1*
b0000000100000000 ,
#13000000
0#
0*
#14000000
b0000000100000000 !
b0000000000000010 "
b11 $
b0000000100000000 (
b0000000000000010 )
b11 +
b00000001 -
b00000010 .
b00000000 /
b00000010 0
b00000010 1
03
06
08
1<
1>
1@
b00000001 s
b00000001 u
1w
1z
1|
#15000000
1#
b0000000000000000 %
1*
b0000000000000000 ,
#16000000
0#
0*
#17000000
